<?php
/**
 * Work with fluidinfo database
 */
$path = drupal_get_path('module', 'fluidinfo');
require ($path . '/lib/fluidinfo.php');


function fi_getfluidinfo() {
  $fluidinfo = new Fluidinfo();
  $prefix = '';
  if(variable_get('fluid_sandbox')){
    $prefix = 'http://sandbox.fluidinfo.com'; 
  }else{
	  $prefix = 'https://fluiddb.fluidinfo.com';
  }
  $fluidinfo->setPrefix($prefix);
  $fluidinfo->setCredentials(variable_get('fluid_user'), variable_get('fluid_password'));
  return $fluidinfo;
}


/**
 * Implementación del hook_menu()
 */                                                                                                                                                                                                       
function fluidinfo_menu() {

  $items = array();
  $items['admin/config/content/fluidinfo'] = array(
    'title' => 'Fluidinfo',
    'description' => 'Configuración de fluidinfo',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fluidinfo_configuracion'),
    'access arguments' => array('administer site configuration'),
    'file' => 'fluidinfo.admin.inc',
  );
  return $items;
}


/**
*  Implementation of hook_form_FORM_ID_alter
*/
function fluidinfo_form_field_ui_field_edit_form_alter(&$form, $form_state, $form_id) {
  $node_type = $form['#instance']['bundle'];
  $variable_node_types = variable_get('node_types');
  if(isset($variable_node_types[$node_type])){
    $form['instance']['fluidinfo'] = array(
      '#type' => 'checkbox',
      '#title' => t('activa fluidinfo'),
      '#description' => t('Quieres que este campo sea guardado por fluidinfo?'),
      '#default_value' => isset($form['#instance']['fluidinfo']) ? $form['#instance']['fluidinfo'] : '',
      '#weight' => $form['instance']['label']['#weight'] + 1,
    );
  }
}

function fluidinfo_node_insert($node){
  $variable_node_types = variable_get('node_types');
  if(isset($variable_node_types[$node->type])){
    if((string)$variable_node_types[$node->type] == (string)$node->type){
      _create_fluidinfo($node);    
    }  
  }
}

function fluidinfo_node_update($node){
  $variable_node_types = variable_get('node_types');
  if(isset($variable_node_types[$node->type])){
    if((string)$variable_node_types[$node->type] == (string)$node->type){
      _create_fluidinfo($node);    
    }  
  }
}


function _create_fluidinfo($node){
  global $base_url;
  $fluidinfo = fi_getfluidinfo();

  $fluid_namespace = variable_get('fluid_namespace');
  $fluid_user = variable_get('fluid_user');
  $ns = $fluid_user.'/'.$fluid_namespace.'/';

  $instance = field_info_instances();
  $campos = $instance['node'][$node->type];
  $wrapper = entity_metadata_wrapper('node', $node);
  // TODO Es feo y poco usable quitar el swich sobre widget module y meterlo con displaymodule 
  foreach ($campos as $key) {
    $tag = $ns.strtolower($key['field_name']);
    $label = $ns.preg_replace('/ /', '_', $key['label']);
    if(isset($key['fluidinfo'])){
      if($key['fluidinfo'] == true){
        switch ($key['display']['default']['type']) {
          case 'node_reference_default':
            $node_ref = $wrapper->$key['field_name']->value(array('sanitize' => true));
            $campo_fluid[$label] = array();
            foreach ($node_ref as $id) {
              array_push($campo_fluid[$label], $id->title);
            }
            break;
          case 'text_default':
          case 'list_default':
            $campo_fluid[$tag] = $wrapper->$key['field_name']->value(array('sanitize' => true));
            break;
          default:
            $campo_fluid[$ns.'title'] = $wrapper->title->value(array('sanitize' => TRUE));
            break;
        }
    }
    }
  }
  $out = $fluidinfo->updateValues('fluiddb/about="'.$base_url.'/node/'.$node->nid.'"', $campo_fluid);
}

